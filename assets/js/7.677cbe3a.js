(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{323:function(t,s,v){t.exports=v.p+"assets/img/eventLoop.90c4b56d.png"},338:function(t,s,v){"use strict";v.r(s);var _=v(33),e=Object(_.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"异步编程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#异步编程"}},[t._v("#")]),t._v(" 异步编程")]),t._v(" "),_("p",[t._v("包含浏览器线程、Event loop等知识点。因为异步编程是依赖浏览器线程的，所以浏览器线程放在这边讲解。")]),t._v(" "),_("h2",{attrs:{id:"进程与线程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程"}},[t._v("#")]),t._v(" 进程与线程")]),t._v(" "),_("p",[t._v("首先说一下什么是进程和线程，进程是一个程序运行的实例，同一个程序可以产生多个进程，一个进程包含一个或者多个线程，线程是操作系统能够进行运算调度的最小单位，一次只能执行一个任务，有自己的调用栈、寄存器环境，同一个进程的线程共享进程资源。")]),t._v(" "),_("h2",{attrs:{id:"浏览器进程相关"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器进程相关"}},[t._v("#")]),t._v(" 浏览器进程相关")]),t._v(" "),_("p",[t._v("js是单线程语言，通过浏览器内核多线程来实现异步。")]),t._v(" "),_("p",[t._v("浏览器有多个进程，包括浏览器进程、渲染进程、GPU进程、网络进程、插件进程。\n其中我们要关注的是渲染进程。\n渲染进程包括：")]),t._v(" "),_("ul",[_("li",[t._v("GUI线程")]),t._v(" "),_("li",[t._v("js引擎线程")]),t._v(" "),_("li",[t._v("定时触发器线程")]),t._v(" "),_("li",[t._v("事件触发线程")]),t._v(" "),_("li",[t._v("异步Http请求线程等")])]),t._v(" "),_("p",[_("strong",[t._v("GUI线程")]),t._v("\n主要作用是渲染布局，解析DOM、CSS。")]),t._v(" "),_("p",[_("strong",[t._v("js引擎线程")]),t._v("\n解析、执行JS，这个线程只有一个，所以说js是单线程语言，其实语言本身是没有线程的概念的。\n因为js可以操作DOM，所以说与GUI线程互斥，如果js的执行时间过长，那么页面的渲染就会受到影响，所以要尽量优化代码。")]),t._v(" "),_("p",[_("strong",[t._v("定时触发器线程")]),t._v("\n主要用于处理setTimeout、setInterval，js处理定时器依赖此线程，和js引擎线程不互斥，因为js和定时器不在同一线程处理，所以定时器才不会阻塞定时器。\n定时器触发线程会在定时器任务完成以后，通知时间触发线程往任务队列里面添加事件。")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[t._v("  这边扩展一下定时器的一些问题\n  1：定时任务可能不会按时执行，因为需要等待同步任务执行完毕。\n  2：定时器嵌套5次之后最小间隔不能低于4ms，不同浏览器有不同的实现。\n")])])])]),t._v(" "),_("p",[_("strong",[t._v("事件触发线程")]),t._v("\n将满足触发条件的事件放入任务队列。")]),t._v(" "),_("p",[_("strong",[t._v("异步Http请求线程")]),t._v("\nXHR所在线程，请求完成时如果有回调函数就会通知事件触发线程往任务队列添加事件。")]),t._v(" "),_("h2",{attrs:{id:"浏览器渲染"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染"}},[t._v("#")]),t._v(" 浏览器渲染")]),t._v(" "),_("p",[t._v("这部分内容放在"),_("RouterLink",{attrs:{to:"/student/aboutBrowser/1.html"}},[t._v("这边")]),t._v("讲解。")],1),t._v(" "),_("h2",{attrs:{id:"事件循环"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),_("p",[t._v("js的异步实现从宏观来看，是依靠浏览器的多线程，而从微观来看，则是Event loop，事件循环。")]),t._v(" "),_("p",[t._v("事件循环主要检查任务队列和主线程的调用栈（执行栈）。")]),t._v(" "),_("p",[t._v("异步任务分为两类（对应两种任务队列）：")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("宏任务  macroTask")]),t._v(" "),_("p",[t._v("包含script、setTimeout、setInterval、setImmediate、I/O、UI rendering")])]),t._v(" "),_("li",[_("p",[t._v("微任务  microTask")]),t._v(" "),_("p",[t._v("包含Promise、object.observe、MuationObserver、postMessage")])])]),t._v(" "),_("p",[t._v("首先，执行script（宏任务），称之为全局任务，在执行过程中碰到的异步代码会找到对应的线程处理并通过事件触发线程将回调等添加到对应的任务队列中，直到script全部执行完毕以后，去除微任务队列的所有代码并执行，执行完以后重新渲染，然后再取一个宏任务进行执行，这个循环的过程就是Event loop。")]),t._v(" "),_("p",[t._v("总结：微任务比宏任务具有更高的优先级且微任务队列必须清空才能继续Event loop。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(323),alt:"event loop"}})]),t._v(" "),_("p",[_("strong",[t._v("注意")]),t._v("：requestAnimationFrame出于渲染阶段。")])])}),[],!1,null,null,null);s.default=e.exports}}]);